//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CadPsiquiatrico
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LabPsiquiatricoEntities : DbContext
    {
        public LabPsiquiatricoEntities()
            : base("name=LabPsiquiatricoEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cita> Cita { get; set; }
        public virtual DbSet<Medicamento> Medicamento { get; set; }
        public virtual DbSet<Paciente> Paciente { get; set; }
        public virtual DbSet<Receta> Receta { get; set; }
        public virtual DbSet<Terapeuta> Terapeuta { get; set; }
    
        public virtual ObjectResult<paCitaListar_Result> paCitaListar(string parametro)
        {
            var parametroParameter = parametro != null ?
                new ObjectParameter("parametro", parametro) :
                new ObjectParameter("parametro", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<paCitaListar_Result>("paCitaListar", parametroParameter);
        }
    
        public virtual ObjectResult<paMedicamentoListar_Result> paMedicamentoListar(string parametro)
        {
            var parametroParameter = parametro != null ?
                new ObjectParameter("parametro", parametro) :
                new ObjectParameter("parametro", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<paMedicamentoListar_Result>("paMedicamentoListar", parametroParameter);
        }
    
        public virtual ObjectResult<paPacienteListar_Result> paPacienteListar(string parametro)
        {
            var parametroParameter = parametro != null ?
                new ObjectParameter("parametro", parametro) :
                new ObjectParameter("parametro", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<paPacienteListar_Result>("paPacienteListar", parametroParameter);
        }
    
        public virtual ObjectResult<paRecetaListar_Result> paRecetaListar(string parametro)
        {
            var parametroParameter = parametro != null ?
                new ObjectParameter("parametro", parametro) :
                new ObjectParameter("parametro", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<paRecetaListar_Result>("paRecetaListar", parametroParameter);
        }
    
        public virtual ObjectResult<paTerapeutaListar_Result> paTerapeutaListar(string parametro)
        {
            var parametroParameter = parametro != null ?
                new ObjectParameter("parametro", parametro) :
                new ObjectParameter("parametro", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<paTerapeutaListar_Result>("paTerapeutaListar", parametroParameter);
        }
    }
}
